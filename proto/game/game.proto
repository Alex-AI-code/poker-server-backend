syntax = "proto3";

package game;

service GameCoordinatorController {
    rpc Create(CreateGameRequest) returns (CreateGameResponse) {}
    rpc List(ListGameRequest) returns (ListGameResponse) {}
    rpc Play(stream PlayGameRequest) returns (stream PlayGameResponse) {}
}

message CreateGameRequest {
    string token = 1;
    string kuhn_type = 2;
}

message CreateGameResponse {
    string id = 1;
}

message ListGameRequest {
    string token = 1;
}

message ListGameResponse {
    repeated string game_ids = 1;
}

message PlayGameRequest {
    string action = 1;
}

message PlayGameResponse {
    enum PlayGameResponseEvent {
        Nothing = 0;
        CardDeal = 1;
        NextAction = 2;
        GameStart = 3;
        RoundResult = 4;
        GameResult = 5;
        Close = 6;
        UpdateGameId = 7;
        Error = 8;
    }
    PlayGameResponseEvent event = 1;
    repeated string available_actions = 2;

    int32 turn_order = 4;
    string card_rank = 5;
    bytes card_image = 6;

    string inf_set = 7;
    int32 round_evaluation = 8;
    string game_result = 9;

    string game_id = 10;
    string error = 11;
}